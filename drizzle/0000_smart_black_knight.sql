CREATE TYPE "public"."appointment_status" AS ENUM('SCHEDULED', 'CONFIRMED', 'COMPLETED', 'CANCELLED');--> statement-breakpoint
CREATE TABLE "lutra-tech-test_appointment" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "lutra-tech-test_appointment_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"patientId" integer NOT NULL,
	"scheduledFor" timestamp with time zone NOT NULL,
	"SCHEDULED" "appointment_status" NOT NULL,
	"reason" varchar(256) NOT NULL,
	"notes" text,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "lutra-tech-test_patient" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "lutra-tech-test_patient_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"firstName" varchar(100) NOT NULL,
	"lastName" varchar(100) NOT NULL,
	"dateOfBirth" date NOT NULL,
	"email" varchar(256),
	"isActive" boolean DEFAULT true NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone
);
--> statement-breakpoint
ALTER TABLE "lutra-tech-test_appointment" ADD CONSTRAINT "lutra-tech-test_appointment_patientId_lutra-tech-test_patient_id_fk" FOREIGN KEY ("patientId") REFERENCES "public"."lutra-tech-test_patient"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "appointment_patient_idx" ON "lutra-tech-test_appointment" USING btree ("patientId");--> statement-breakpoint
CREATE INDEX "appointment_status_idx" ON "lutra-tech-test_appointment" USING btree ("SCHEDULED");--> statement-breakpoint
CREATE INDEX "appointment_date_idx" ON "lutra-tech-test_appointment" USING btree ("scheduledFor");--> statement-breakpoint
CREATE INDEX "patient_name_idx" ON "lutra-tech-test_patient" USING btree ("lastName","firstName");--> statement-breakpoint
CREATE INDEX "patient_dob_idx" ON "lutra-tech-test_patient" USING btree ("dateOfBirth");